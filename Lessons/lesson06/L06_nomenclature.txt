Nomenklatur för lektion 6:

File / Fil:
	Denna term kanske känns självklar, men vad som kallas för en fil skiljer sig
	åt mellan operativsystem, främst så är det Windows som sticker ut med att
	klassa väldigt få saker som filer.
	I Unix, och andra system baserat på Unix, så brukar man säga
		"Everything is a file"
	Det är en sanning med modifikation, i det flesta fall syftar man egentligen
	på att allt är Filliknande.

File-like / Filliknande:
	Detta är vad som egentligen syftas på med ovanstående citat, i alla fall i
	system som är skapade efter Unix.

	Vad denna term betyder är att dessa saker går att behandla som om de vore
	filer och på så sätt kan man använda sig av samma syntax och verktyg för
	alla interaktioner med datorns system.

	Vi kan se ett exempel på detta i Python, även i Windows, genom att
	titta på hur input() och print() fungerar.Det som användaren skriver in med
	input() hämtas från "standard input" och det som print() skriver ut hamnar
	i "sys.stdout" per standard. Notera att den parameter som man kan skicka med
	till print() heter "file" av just den anledningen.
		Se L06_example01_print_to_file.py

Path:
	Denna term kan syfta på två saker:

		Det system som gör att datorn vet var program ligger. Väldigt förenklat,
		men hur allt det fungerar hamnar utanför denna kurs.
		När det är detta man syftar på brukar man skriva PATH i versaler för att
		göra saker tydligare.

	och

		Var resurser ligger lagrade i datorns filsystem.
		Översättningen av denna term blir lite klumpig men man brukar kalla det
		för "sökväg".
		T.ex:
			"C:\exempel"
			"C:\exempel\exempel.txt"
			"/usr/bin/"

Path-like:
	I Python brukar man prata om "path-like objects" snarare än sökvägar då det
	skiljer sig åt mellan operativsystem hur sökvägar ser ut.

	Utöver det så är det ofta strängar som man refererar till och, tekniskt sett,
	så är ju dessa just strängar och inte sökvägar.